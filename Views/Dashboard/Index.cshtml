@using System
@using supervisor_agente.Consulta
@model IEnumerable<supervisor_agente.Consulta.ConsultaSemana>
@{
    ViewData["Title"] = "Home Page";
}
@{
	/*
<div style="width:90%;">
	<canvas id="canvas"></canvas>
</div>
	*/
}
<table class="table table-hover">
    <thead>
        <tr>
            <th>
                SEMANA #
            </th>
            <th>
                Resueltas
            </th>
            <th>
                No resueltas
            </th>
            <th>
                Total
            </th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.semana)
            </td>
			<td>
                @Html.DisplayFor(modelItem => item.resueltos)
            </td>
			<td>
                @Html.DisplayFor(modelItem => item.noResueltos)
            </td>
			<td>
                @Html.DisplayFor(modelItem => item.total)
            </td>
        </tr>
}
    </tbody>
</table>



@section Scripts {
    <script src="/lib/chart.js/chart.min.js"></script>
    <script src="/lib/chart.js/util.js"></script>
    <script>
		var randomScalingFactor = function() {
			return Math.round(Math.random() * 100);
		};

		var config = {
			type: 'line',
			data: {
				labels: [['June', '2015'], 'July', 'August', 'September', 'October', 'November', 'December', ['January', '2016'], 'February', 'March', 'April', 'May'],
				datasets: [{
					label: 'My First dataset',
					fill: false,
					backgroundColor: window.chartColors.red,
					borderColor: window.chartColors.red,
					data: [
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor()
					]
				}, {
					label: 'My Second dataset',
					fill: false,
					backgroundColor: window.chartColors.blue,
					borderColor: window.chartColors.blue,
					data: [
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor()
					],
				}]
			},
			options: {
				responsive: true,
				title: {
					display: true,
					text: 'Chart with Multiline Labels'
				},
			}
		};

		window.onload = function() {
			var ctx = document.getElementById('canvas').getContext('2d');
			window.myLine = new Chart(ctx, config);
		};
</script>
}